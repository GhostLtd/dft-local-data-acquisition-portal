{%- extends 'frontend/base.html.twig' -%}

{%- set page_title = breadcrumbBuilder.titleFor('fund_return') -%}
{%- set page_heading_class = 'govuk-heading-m' -%}

{%- block content -%}
    {% from "@GhostGovUkFrontend/components/macros.html.twig" import taskListStart, taskListEnd, taskListItem, summaryListStart, summaryListEnd, summaryListRow %}

    {{- summaryListStart() -}}
    {{- summaryListRow({key: 'Lead contact', value: fundReturn.fundAward.leadContact.name}) -}}
    {{- _self.crstsFundReturnSummary(fundReturn) -}}
    {{- summaryListRow({key: 'Sign off', value: _self.signoff(fundReturn.signoffDate, fundReturn.signoffName, fundReturn.signoffUser ?? fundReturn.signoffEmail)}) -}}
    {{- summaryListEnd() -}}

    {%- set visibleFundLevelSections = fundLevelSections | filter(s => is_granted('CAN_VIEW', {subject: fundReturn, section: s.value})) -%}
    {%- if visibleFundLevelSections is not empty -%}
        <h2 class="govuk-heading-s">{{ 'frontend.pages.fund_return.fund_level_details' | trans }}</h2>
        {{- taskListStart() -}}
        {%- for section in visibleFundLevelSections -%}
            {%- set status = fundReturn.getStatusForSection(section) -%}
            {{- taskListItem({
                title: {text: "sections.fund.#{section.value}" | trans},
                href: path('app_fund_return_edit', {fundReturnId: fundReturn.id, section: section.value}),
                status: {tag: {
                    text: "tags.#{status.value}.name" | trans,
                    classes: "govuk-tag--" ~ ("tags.#{status.value}.colour" | trans),
                }},
            }, loop.index0) -}}
        {%- endfor -%}
        {{- taskListEnd() -}}
    {%- endif -%}

    {%- set visibleExpenseDivisions = expenseDivisions | filter(e => is_granted('CAN_VIEW', {subject: fundReturn, section: e.key})) -%}
    {%- if visibleExpenseDivisions is not empty -%}
        <h2 class="govuk-heading-s">{{ 'frontend.pages.fund_return.fund_level_expenses' | trans }}</h2>
        {{- taskListStart() -}}
        {%- for division in visibleExpenseDivisions -%}
            {%- set status = fundReturn.getStatusForSection(division) -%}
            {{- taskListItem({
                title: {text: division.label | trans},
                href: path('app_fund_return_expense_edit', {fundReturnId: fundReturn.id, divisionKey: division.key}),
                status: {tag: {
                    text: "tags.#{status.value}.name" | trans,
                    classes: "govuk-tag--" ~ ("tags.#{status.value}.colour" | trans),
                }},
            }, loop.index0) -}}
        {%- endfor -%}
        {{- taskListEnd() -}}
    {%- endif -%}

    {# Are there any schemes that are visible to us? #}
    {%- set visibleSchemeFunds = schemeFunds | filter(f => is_granted('CAN_VIEW', fundReturn.getSchemeReturnForSchemeFund(f))) -%}
    {%- if visibleSchemeFunds is not empty -%}
        <h2 class="govuk-heading-s">{{ 'frontend.pages.fund_return.schemes' | trans }}</h2>
        {%- set fundTag = fundReturn.signoffUser is null ? 'in_progress' : 'completed' -%}

        {{- taskListStart() -}}
        {#
            Realise that we're not iterating over visibleSchemeFunds. That is intentional, as we
            want to show any projects that don't have a return this quarter (just not linked)
        #}
        {%- for schemeFund in schemeFunds -%}
            {%- set schemeReturn = fundReturn.getSchemeReturnForSchemeFund(schemeFund) -%}
            {%- set isVisible = schemeReturn is null or is_granted('CAN_VIEW', schemeReturn) -%}

            {%- if isVisible -%}
                {%- set isRequired = schemeFund.isReturnRequiredFor(fundReturn.quarter) -%}
                {%- set tag = isRequired ? fundTag : 'not_required' -%}
                {%- set url = path('app_scheme_return', {fundReturnId: fundReturn.id, schemeFundId: schemeFund.id}) -%}
                {{- taskListItem({
                    title: {text: schemeFund.scheme.name},
                    href: isRequired ? url : null,
                    status: {tag: {
                        text: "tags.#{tag}.name" | trans,
                        classes: "govuk-tag--" ~ ("tags.#{tag}.colour" | trans),
                    }},
                }, loop.index) -}}
            {%- endif -%}
        {%- endfor -%}
        {{- taskListEnd() -}}
    {%- endif -%}
{%- endblock -%}

{% macro signoff(date, name, link) -%}
    {% if (date ?? false) %}
        <a href="{{ link.id ?? false ? "/user/#{link.id}" : "mailto:#{link}" }}">{{ name }}</a> ({{ date | date('format.date-time.default' | trans) -}})
    {%- else -%}
        -
    {%- endif -%}
{%- endmacro %}

{%- macro crstsFundReturnSummary(cfr) -%}
    {# @var cfr \App\Entity\FundReturn\CrstsFundReturn #}
    {%- if cfr is instanceof("\\App\\Entity\\FundReturn\\CrstsFundReturn") -%}
        {%- from "@GhostGovUkFrontend/components/macros.html.twig" import summaryListRow, tag -%}
        {{- summaryListRow({key: 'forms.crsts.overall_progress.delivery_confidence.label' | trans, value: cfr.deliveryConfidence}) -}}
        {{- summaryListRow({key: 'forms.crsts.overall_progress.overall_confidence.label' | trans, value: tag({
            text: "enum.rating.#{cfr.overallConfidence.value}" | trans,
            classes: cfr.overallConfidence.tagClass,
        })}) -}}
    {%- endif -%}
{%- endmacro -%}