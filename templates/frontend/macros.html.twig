{% macro renderTable(table, form) %}
    {%- from "@GhostGovUkFrontend/components/macros.html.twig" import tableStart, tableEnd, tableBodyStart, tableBodyEnd, tableHeadStart, tableHeadEnd -%}

    {{- tableStart(table.options) -}}
    {%- for headOrBody in table.headAndBodies() -%}
        {%- if headOrBody.type == 'table-head' -%}
            {{- tableHeadStart(headOrBody.options) -}}
            {{- _self.renderRows(headOrBody, form) -}}
            {{- tableHeadEnd() -}}
        {%- elseif headOrBody.type == 'table-body' %}
            {{- tableBodyStart(headOrBody.options) -}}
            {{- _self.renderRows(headOrBody, form) -}}
            {{- tableBodyEnd() -}}
        {%- endif -%}
    {%- endfor -%}
    {{- tableEnd() -}}
{% endmacro %}

{% macro renderRows(headOrBody, form) %}
    {%- from "@GhostGovUkFrontend/components/macros.html.twig" import tableCell, tableHeader, tableRowStart, tableRowEnd -%}

    {%- for row in headOrBody.rows -%}
        {{- tableRowStart(row.options) -}}
        {%- for cell in row.cells -%}
            {%- if cell.type == 'header' -%}
                {%- set html -%}
                    {%- if cell.options.text is instanceof('\\Symfony\\Component\\Translation\\TranslatableMessage') -%}
                        {{- cell.options.text | trans | nl2br -}}
                    {%- else -%}
                        {{- cell.options.text | nl2br -}}
                    {%- endif -%}
                {%- endset -%}
                {{- tableHeader({...cell.options, html}) -}}
            {%- elseif cell.type == 'cell' -%}
                {%- if form -%}
                    {{- tableCell({...cell.options, html: form_row(form[cell.options.key])}) }}
                {%- else -%}
                    {# If no form passed, just render the cell text #}
                    {{- tableCell(cell.options) -}}
                {%- endif -%}
            {%- endif -%}
        {%- endfor -%}
        {{- tableRowEnd() -}}
    {%- endfor -%}
{% endmacro %}

{%- macro displayCardForReturn(return, title, section, contents, options) %}
    {%- from "@GhostGovUkFrontend/components/macros.html.twig" import summaryCard -%}

    {%- set actions = options.actions ?? [] -%}

    {%- if (options.add_edit_link ?? true) and is_granted('CAN_EDIT', return) -%}
        {%- set actions = actions|merge([{
            text: 'common.actions.edit' | trans,
            visuallyHiddenText: title,
            href: section_edit_path(return, section, false),
        }]) -%}
    {%- endif -%}

    {{- summaryCard({
        title: {
            text: title,
        },
        actions: actions is not empty ? {items: actions} : null,
        attributes: section is defined ? {id: section} : null,
    }, contents) }}
{%- endmacro -%}

{% macro displaySectionsAsTabs(items, heading, selectedIndex, containerClass = 'govuk-!-margin-bottom-9') %}
    {%- if items is not empty -%}
        {%- from "@GhostGovUkFrontend/components/macros.html.twig" import tabs -%}
        <div class="{{ containerClass }}">
            <h2 class="govuk-heading-m">{{ heading }}</h2>
            {{- tabs({items, selectedIndex: selectedIndex ?? false}) -}}
        </div>
    {%- endif -%}
{% endmacro %}

{% macro bcrValue(bcr) %}
    {# @var bcr \App\Entity\SchemeFund\BenefitCostRatio|null #}
    {%- if bcr is null -%}
        {%- set value = '-' -%}
    {%- else -%}
        {%- if bcr.type == constant('App\\Entity\\Enum\\BenefitCostRatioType::NA') -%}
            {{- 'common.text.na' | trans -}}
        {%- elseif bcr.type == constant('App\\Entity\\Enum\\BenefitCostRatioType::TBC') -%}
            {{- 'common.text.tbc' | trans -}}
        {%- elseif bcr.type == constant('App\\Entity\\Enum\\BenefitCostRatioType::VALUE') -%}
            {{- bcr.value -}}
        {%- else -%}
            -
        {%- endif -%}
    {%- endif -%}
{% endmacro %}

{% macro enumTextValue(enum_prefix, enum) %}
    {%- set enumValue = enum ? enum.value : null -%}
    {{- enumValue ? ("#{enum_prefix}.#{enumValue}" | trans) : null -}}
{% endmacro %}

{% macro dateValue(value, options) %}
    {{- value ? (value | date((options.dateFormat ?? 'format.date.default') | trans)) : '-' -}}
{% endmacro %}

{% macro moneyValue(value) %}
    {{- _self.textValue(value ? ('Â£' ~ (value | number_format)) : null) -}}
{% endmacro %}

{%- macro yesOrNoValue(value) -%}
    {{- (value == true ? 'common.text.yes' : 'common.text.no') | trans -}}
{%- endmacro -%}

{%- macro textValue(value) -%}
    {{- (value ?? '-') | nl2br -}}
{%- endmacro -%}

{% macro onTrackRatingValue(ratingEnum) %}
    {%- from "@GhostGovUkFrontend/components/macros.html.twig" import tag -%}
    {{- ratingEnum is null ? '-' : tag({text: "enum.on_track_rating_shortened.#{ratingEnum.value}" | trans, classes: ratingEnum.tagClass}) -}}
{% endmacro %}

{%- macro ratingTagValue(ratingEnum) -%}
    {%- from "@GhostGovUkFrontend/components/macros.html.twig" import tag -%}
    {{- ratingEnum is null ? '-' : tag({text: "enum.rating.#{ratingEnum.value}" | trans, classes: ratingEnum.tagClass}) -}}
{%- endmacro -%}

{% macro expenseDivisionComments(return, division) %}
    {%- from "@GhostGovUkFrontend/components/macros.html.twig" import summaryList -%}
    {%- from 'frontend/macros.html.twig' import textValue -%}
    {%- if (return.expenseDivisionComment(division.key)) ?? false -%}
        {{ summaryList({
            classes: 'govuk-summary-list--no-border govuk-!-margin-top-6 expense-comments',
            rows: {
                ('forms.crsts.expenses.comments.title' | trans): textValue(return.expenseDivisionComment(division.key)),
            }
        }) }}
    {%- endif -%}
{% endmacro %}
